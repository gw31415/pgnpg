<html lang="ja" class="wf-inactive">
<head>
<meta charset="utf-8" />
<title>PGN Profile</title>
<meta name="description" content="PGNを簡易表示" />
<meta name="keywords" content="PGN,PIX" />
<meta name="viewport" content="width=device-width,initial-scale=1.0" />
<meta name="format-detection" content="telephone=no,email=no,address=no" />
<link rel="icon" href="favicon.ico" />
<link rel="apple-touch-icon" href="icon.png" />
<link rel="stylesheet" href="https://unpkg.com/modern-css-reset/dist/reset.min.css" />
<link rel="canonical" href="" />

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>

<!-- OGP -->
<meta property="og:url" content="https://pgn.amas.dev" />
<!--<meta property="og:type" content="" />-->
<meta property="og:title" content="PGN Profile" />
<meta property="og:description" content="PGNを簡易表示" />
<meta property="og:site_name" content="pgn.amas.dev" />
<!-- <meta property="og:image" content="" /> -->
<meta property="og:locale" content="ja_JP" />

<!-- OGP Facebook -->
<!--<meta property="fb:app_id" content="" />-->

<!-- OGP Twitter -->
<!--<meta name="twitter:card" content="" />-->
<!--<meta name="twitter:site" content="" />-->
<!--<meta name="twitter:creator" content="" />-->
<!--<meta name="twitter:title" content="{{ title ***REMOVED******REMOVED***" />-->
<!--<meta name="twitter:description" content="" />-->
<!--<meta name="twitter:image" content="" />-->

<script is:inline src="https://cdn.jsdelivr.net/npm/js-circle-progress/dist/circle-progress.min.js" type="module"></script>
<style lang="scss">
	html,
	body,
	main {
		width: 100%;
		height: 100%;
		font-family: sans-serif;
	***REMOVED***

	circle-progress::part(base) {
		height: 60vmin;
		width: 60vmin;
	***REMOVED***
	circle-progress::part(value) {
		stroke-width: 3px;
		stroke: white;
		stroke-linecap: round;
	***REMOVED***
	circle-progress::part(circle) {
		stroke-width: 6px;
		stroke: #888;
	***REMOVED***
	circle-progress::part(text) {
		fill: #888;
		font-family: 'Orbitron', sans-serif;
	***REMOVED***

	.rainbow {
		background: linear-gradient(to-right, #FF0000, #FF7F00, #FFFF00, #00FF00, #0000FF, #4B0082, #8B00FF);
		background: -webkit-linear-gradient(left, #FF0000, #FF7F00, #FFFF00, #00FF00, #0000FF, #4B0082, #8B00FF);
		background: -o-linear-gradient(right, #FF0000, #FF7F00, #FFFF00, #00FF00, #0000FF, #4B0082, #8B00FF);
		background: -moz-linear-gradient(right, #FF0000, #FF7F00, #FFFF00, #00FF00, #0000FF, #4B0082, #8B00FF);
		-webkit-background-clip: text;
		background-clip: text;
		-webkit-text-fill-color: transparent;
		text-fill-color: transparent;
	***REMOVED***

	.typing {
		max-width: 100%;
		width: 0;
		animation: blink .5s step-end infinite alternate;
		white-space: nowrap;
		overflow: scroll;
		border-right: 2px solid;
		font-family: monospace;
	***REMOVED***

	@keyframes typing {
		from {
			width: 0
		***REMOVED***
	***REMOVED***

	@keyframes blink {
		50% {
			border-color: transparent
		***REMOVED***
	***REMOVED***

	@-webkit-keyframes svg {
		0% {
			stroke-dashoffset: 2000;
			fill: transparent;
		***REMOVED***

		40% {
			stroke-dashoffset: 2000;
			fill: transparent;
		***REMOVED***

		50% {
			fill: transparent;
		***REMOVED***

		100% {
			stroke-dashoffset: 0;
			fill: #888;
		***REMOVED***
	***REMOVED***

	main {
		padding: 1rem;
		display: flex;
		flex-direction: column;
		transition: opacity .2s;
	***REMOVED***

	#errmsg {
		display: none;
		transition: opacity .2s;
		font-size: 24px;
		animation: typing 2.6s steps(26), blink .4s step-end infinite alternate;
		width: 26ch;
	***REMOVED***

	.wf-inactive body,
	body.initializing {
		display: flex;
		justify-content: center;
		align-items: center;
		main {
			opacity: 0;
			width: 0;
			height: 0;
			overflow: hidden;
		***REMOVED***
		#errmsg {
			display: block;
		***REMOVED***

	***REMOVED***
</style>

<body class="initializing">
	<main>
		<div style="display:flex;justify-content:space-between;align-items:center">
			<div id="title" class="typing" style="font-size:2rem">@</div>
			<div id="updatedat" style="text-align:right"></div>
		</div>
		<div style="flex:1;display:grid;place-items: center;grid-template-rows:4rem 1fr">
			<div>
				<div id="level" style="opacity:0;transition:opacity 1s;font-size:3.5rem;font-family:'Jersey 10',monospace"></div>
			</div>
			<div><circle-progress text-format="vertical"></circle-progress></div>
		</div>
	</main>
	<div class="typing" id="errmsg">Please Enable JavaScript.</div>
</body>	
</html>

<script>
import type UserProfile from "../../../types";
import WebFont from "webfontloader";

function enableTyping(e: Element) {
	const el = e as HTMLElement;
	const len = `${el.textContent***REMOVED***`.length + 1;
	el.style.animation = `typing ${Math.min(1, 0.1 * len)***REMOVED***s steps(${len***REMOVED***), blink .4s step-end infinite alternate`;
	el.style.width = `${len***REMOVED***ch`;
	el.addEventListener("animationend", () => {
		el.style.animation = "none";
		el.style.borderRight = "none";
	***REMOVED***);
***REMOVED***

document.getElementById("errmsg")!.textContent = "Loading...";

const data: UserProfile = await fetch("data.json").then((res) => {
	if (!res.ok) {
		const err = document.getElementById("errmsg")!;
		err.textContent = "User Not Found.";
		err.style.display = "block";
		enableTyping(err);
		return undefined;
	***REMOVED***
	return res.json();
***REMOVED***);

if (data === undefined) throw new Error("User Not Found.");

WebFont.load({
	google: {
		families: ['Jersey 10'],
		text: "IronBronzeSilverGoldPlatinumDiamondMasterGrandMaster",
	***REMOVED***
***REMOVED***);
WebFont.load({
	google: {
		families: ['Orbitron'],
		text: "0123456789",
	***REMOVED***
***REMOVED***);

function start() {
	document.getElementById("title")!.textContent = '@' + data.user.pgrit_id;
	document.getElementById("updatedat")!.textContent = new Date(data.pgn.updated_at).toLocaleString();

	document.querySelectorAll(".typing").forEach(enableTyping);

	const circle = document.getElementsByTagName("circle-progress")[0]! as any;
	if (data.pgn.level === "GrandMaster") {
		circle.setAttribute("value","100");
		circle.setAttribute("max","100");
		circle.setAttribute("text-format", "percent");
	***REMOVED***else {
		circle.setAttribute("value", `${data.pgn.on_level***REMOVED***`);
		circle.setAttribute("max", `${data.pgn.level_length***REMOVED***`);
	***REMOVED***

	const level = document.getElementById("level")!;
	switch (data.pgn.level) {
		case "Iron":
			level.style.color = '#33363B';
			break;
		case "Bronze":
			level.style.color = '#CD7F32';
			break;
		case "Silver":
			level.style.color = '#6e6e6e';
			break;
		case "Gold":
			level.style.color = '#FFD700';
			break;
		case "Platinum":
			level.style.color = 'black';
			break;
		case "Diamond":
			level.style.color = '#0091b3';
			break;
		case "Master":
			level.style.color = '#6A0DAD';
			break;
		case "GrandMaster":
			level.classList.add('rainbow');
	***REMOVED***
	level.style.opacity = "1";
	level.textContent = `${data.pgn.level***REMOVED***`;

	document.body.classList.remove("initializing");
***REMOVED***
if (document.readyState === 'loading') document.addEventListener('DOMContentLoaded', start); else start();
</script>
